{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        window.addEventListener('resize', this.reportWindowSize.bind(this), true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        setTimeout(function () { _this.updateSplitterSize(true); }, 200);\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (this.paneSettings[i].min !== null) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // tslint:disable-next-line:no-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // tslint:disable-next-line:no-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // tslint:disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // tslint:disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                    this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n            this.renderReactTemplates();\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                    this.renderReactTemplates();\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","window","addEventListener","reportWindowSize","bind","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","updateSplitterSize","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","minValue","paneMinRange","updatePane","flexPane","convertPixelToNumber","toString","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","scrollY","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","clearTemplate","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","drag","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","tagName","compilerFn","compilerFn_1","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","updateBlazorTemplate","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","updatedHeight","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","this_4","localPanel","pan"],"mappings":"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"}